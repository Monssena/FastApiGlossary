INITIAL_TERMS = [
  {
    "term": "Spring Framework",
    "definition": "Популярный фреймворк для разработки Java-приложений, который предоставляет инструменты для создания веб-приложений, работы с базами данных и управления зависимостями с помощью контейнера Inversion of Control (IoC)."
  },
  {
    "term": "Flask",
    "definition": "Минималистичный веб-фреймворк на Python, который позволяет создавать веб-приложения и API, обеспечивая гибкость и легкость настройки."
  },
  {
    "term": "REST API",
    "definition": "Стиль архитектуры для создания веб-сервисов, который использует стандартные HTTP-методы, такие как GET, POST, PUT, DELETE, для взаимодействия между клиентом и сервером."
  },
  {
    "term": "Java Virtual Machine (JVM)",
    "definition": "Среда выполнения для Java-программ, которая позволяет запускать байт-код, обеспечивая переносимость приложений между различными платформами."
  },
  {
    "term": "Асинхронное программирование",
    "definition": "Подход к написанию программного обеспечения, в котором задачи выполняются независимо, не блокируя основной поток выполнения. В Python реализуется с использованием async/await."
  },
  {
    "term": "Docker",
    "definition": "Платформа для контейнеризации, которая позволяет упаковывать приложения и их зависимости в контейнеры для упрощения развертывания и масштабирования."
  },
  {
    "term": "Kubernetes",
    "definition": "Платформа для оркестрации контейнеров, которая автоматизирует развертывание, масштабирование и управление контейнеризированными приложениями."
  },
  {
    "term": "Dependency Injection (DI)",
    "definition": "Шаблон проектирования, используемый для управления зависимостями между объектами. В Java поддерживается такими фреймворками, как Spring."
  },
  {
    "term": "WSGI",
    "definition": "Интерфейс для взаимодействия между веб-серверами и Python-приложениями. Используется фреймворками, такими как Flask и Django, для обработки HTTP-запросов."
  }
]
